<map id="is_enum&lt; T &gt;" name="is_enum&lt; T &gt;">
<area shape="rect" id="node7" href="$structis__enum_3_01const_01T_01_4.html" title="is_enum\&lt; const T \&gt;" alt="" coords="919,68,1057,95"/>
<area shape="rect" id="node8" href="$structis__enum_3_01const_01volatile_01T_01_4.html" title="is_enum\&lt; const volatile T \&gt;" alt="" coords="896,119,1080,145"/>
<area shape="rect" id="node9" href="$structis__enum_3_01volatile_01T_01_4.html" title="is_enum\&lt; volatile T \&gt;" alt="" coords="914,169,1062,196"/>
<area shape="rect" id="node2" href="$structinternal_1_1is__enum__impl.html" title="internal::is_enum_impl\l\&lt; is_same\&lt; T, void \&gt;::\lvalue\|\|is_integral\&lt; T \&gt;\l::value\|\|is_floating_point\l\&lt; T \&gt;::value\|\|is_reference\l\&lt; T \&gt;::value\|\|internal::is\l_class_or_union\&lt; T \&gt;::value, T \&gt;" alt="" coords="483,75,697,189"/>
<area shape="rect" id="node3" href="$structis__convertible.html" title="is_convertible\&lt; std\l::add_reference\&lt; T \&gt;\l::type, int \&gt;" alt="" coords="291,35,435,91"/>
<area shape="rect" id="node4" href="$structintegral__constant.html" title="bool_constant\&lt; sizeof\l(internal::ConvertHelper\l\&lt; std::add_reference\&lt; T\l \&gt;::type , int &#160;\&gt;::Test(internal\l::ConvertHelper\&lt; std::add_reference\l\&lt; T \&gt;::type , int &#160;\&gt;::Create()))=\l=sizeof(small_)\&gt;" alt="" coords="7,5,241,120"/>
<area shape="rect" id="node5" href="$structis__convertible.html" title="is_convertible\&lt; gxx\l::add_reference\&lt; T \&gt;\l::type, int \&gt;" alt="" coords="291,173,435,229"/>
<area shape="rect" id="node6" href="$structintegral__constant.html" title="bool_constant\&lt; sizeof\l(internal::ConvertHelper\l\&lt; gxx::add_reference\&lt; T\l \&gt;::type , int &#160;\&gt;::Test(internal\l::ConvertHelper\&lt; gxx::add_reference\l\&lt; T \&gt;::type , int &#160;\&gt;::Create()))=\l=sizeof(small_)\&gt;" alt="" coords="5,144,243,259"/>
</map>
